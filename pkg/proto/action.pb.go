// Code generated by protoc-gen-go. DO NOT EDIT.
// source: action.proto

package action

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type InvokeEnvelope struct {
	Data                 *any.Any `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeEnvelope) Reset()         { *m = InvokeEnvelope{} }
func (m *InvokeEnvelope) String() string { return proto.CompactTextString(m) }
func (*InvokeEnvelope) ProtoMessage()    {}
func (*InvokeEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{0}
}

func (m *InvokeEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeEnvelope.Unmarshal(m, b)
}
func (m *InvokeEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeEnvelope.Marshal(b, m, deterministic)
}
func (m *InvokeEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeEnvelope.Merge(m, src)
}
func (m *InvokeEnvelope) XXX_Size() int {
	return xxx_messageInfo_InvokeEnvelope.Size(m)
}
func (m *InvokeEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeEnvelope proto.InternalMessageInfo

func (m *InvokeEnvelope) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type EventSource struct {
	Name                 string           `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Spec                 *EventSourceSpec `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *EventSource) Reset()         { *m = EventSource{} }
func (m *EventSource) String() string { return proto.CompactTextString(m) }
func (*EventSource) ProtoMessage()    {}
func (*EventSource) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{1}
}

func (m *EventSource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventSource.Unmarshal(m, b)
}
func (m *EventSource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventSource.Marshal(b, m, deterministic)
}
func (m *EventSource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSource.Merge(m, src)
}
func (m *EventSource) XXX_Size() int {
	return xxx_messageInfo_EventSource.Size(m)
}
func (m *EventSource) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSource.DiscardUnknown(m)
}

var xxx_messageInfo_EventSource proto.InternalMessageInfo

func (m *EventSource) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventSource) GetSpec() *EventSourceSpec {
	if m != nil {
		return m.Spec
	}
	return nil
}

type SaveStateEnvelope struct {
	State                []*KeyVal `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SaveStateEnvelope) Reset()         { *m = SaveStateEnvelope{} }
func (m *SaveStateEnvelope) String() string { return proto.CompactTextString(m) }
func (*SaveStateEnvelope) ProtoMessage()    {}
func (*SaveStateEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{2}
}

func (m *SaveStateEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SaveStateEnvelope.Unmarshal(m, b)
}
func (m *SaveStateEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SaveStateEnvelope.Marshal(b, m, deterministic)
}
func (m *SaveStateEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SaveStateEnvelope.Merge(m, src)
}
func (m *SaveStateEnvelope) XXX_Size() int {
	return xxx_messageInfo_SaveStateEnvelope.Size(m)
}
func (m *SaveStateEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_SaveStateEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_SaveStateEnvelope proto.InternalMessageInfo

func (m *SaveStateEnvelope) GetState() []*KeyVal {
	if m != nil {
		return m.State
	}
	return nil
}

type GetStateEnvelope struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStateEnvelope) Reset()         { *m = GetStateEnvelope{} }
func (m *GetStateEnvelope) String() string { return proto.CompactTextString(m) }
func (*GetStateEnvelope) ProtoMessage()    {}
func (*GetStateEnvelope) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{3}
}

func (m *GetStateEnvelope) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStateEnvelope.Unmarshal(m, b)
}
func (m *GetStateEnvelope) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStateEnvelope.Marshal(b, m, deterministic)
}
func (m *GetStateEnvelope) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStateEnvelope.Merge(m, src)
}
func (m *GetStateEnvelope) XXX_Size() int {
	return xxx_messageInfo_GetStateEnvelope.Size(m)
}
func (m *GetStateEnvelope) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStateEnvelope.DiscardUnknown(m)
}

var xxx_messageInfo_GetStateEnvelope proto.InternalMessageInfo

func (m *GetStateEnvelope) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type EventSourceSpec struct {
	Type                 string   `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	ConnectionInfo       *any.Any `protobuf:"bytes,2,opt,name=connection_info,json=connectionInfo,proto3" json:"connection_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventSourceSpec) Reset()         { *m = EventSourceSpec{} }
func (m *EventSourceSpec) String() string { return proto.CompactTextString(m) }
func (*EventSourceSpec) ProtoMessage()    {}
func (*EventSourceSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{4}
}

func (m *EventSourceSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventSourceSpec.Unmarshal(m, b)
}
func (m *EventSourceSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventSourceSpec.Marshal(b, m, deterministic)
}
func (m *EventSourceSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventSourceSpec.Merge(m, src)
}
func (m *EventSourceSpec) XXX_Size() int {
	return xxx_messageInfo_EventSourceSpec.Size(m)
}
func (m *EventSourceSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_EventSourceSpec.DiscardUnknown(m)
}

var xxx_messageInfo_EventSourceSpec proto.InternalMessageInfo

func (m *EventSourceSpec) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *EventSourceSpec) GetConnectionInfo() *any.Any {
	if m != nil {
		return m.ConnectionInfo
	}
	return nil
}

type InvokeMethod struct {
	MethodName           string   `protobuf:"bytes,1,opt,name=method_name,json=methodName,proto3" json:"method_name,omitempty"`
	ContextId            string   `protobuf:"bytes,2,opt,name=context_id,json=contextId,proto3" json:"context_id,omitempty"`
	Data                 *any.Any `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvokeMethod) Reset()         { *m = InvokeMethod{} }
func (m *InvokeMethod) String() string { return proto.CompactTextString(m) }
func (*InvokeMethod) ProtoMessage()    {}
func (*InvokeMethod) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{5}
}

func (m *InvokeMethod) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvokeMethod.Unmarshal(m, b)
}
func (m *InvokeMethod) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvokeMethod.Marshal(b, m, deterministic)
}
func (m *InvokeMethod) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvokeMethod.Merge(m, src)
}
func (m *InvokeMethod) XXX_Size() int {
	return xxx_messageInfo_InvokeMethod.Size(m)
}
func (m *InvokeMethod) XXX_DiscardUnknown() {
	xxx_messageInfo_InvokeMethod.DiscardUnknown(m)
}

var xxx_messageInfo_InvokeMethod proto.InternalMessageInfo

func (m *InvokeMethod) GetMethodName() string {
	if m != nil {
		return m.MethodName
	}
	return ""
}

func (m *InvokeMethod) GetContextId() string {
	if m != nil {
		return m.ContextId
	}
	return ""
}

func (m *InvokeMethod) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type State struct {
	State                []*KeyVal `protobuf:"bytes,1,rep,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *State) Reset()         { *m = State{} }
func (m *State) String() string { return proto.CompactTextString(m) }
func (*State) ProtoMessage()    {}
func (*State) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{6}
}

func (m *State) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_State.Unmarshal(m, b)
}
func (m *State) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_State.Marshal(b, m, deterministic)
}
func (m *State) XXX_Merge(src proto.Message) {
	xxx_messageInfo_State.Merge(m, src)
}
func (m *State) XXX_Size() int {
	return xxx_messageInfo_State.Size(m)
}
func (m *State) XXX_DiscardUnknown() {
	xxx_messageInfo_State.DiscardUnknown(m)
}

var xxx_messageInfo_State proto.InternalMessageInfo

func (m *State) GetState() []*KeyVal {
	if m != nil {
		return m.State
	}
	return nil
}

type KeyVal struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                *any.Any `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyVal) Reset()         { *m = KeyVal{} }
func (m *KeyVal) String() string { return proto.CompactTextString(m) }
func (*KeyVal) ProtoMessage()    {}
func (*KeyVal) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{7}
}

func (m *KeyVal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyVal.Unmarshal(m, b)
}
func (m *KeyVal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyVal.Marshal(b, m, deterministic)
}
func (m *KeyVal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyVal.Merge(m, src)
}
func (m *KeyVal) XXX_Size() int {
	return xxx_messageInfo_KeyVal.Size(m)
}
func (m *KeyVal) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyVal.DiscardUnknown(m)
}

var xxx_messageInfo_KeyVal proto.InternalMessageInfo

func (m *KeyVal) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyVal) GetValue() *any.Any {
	if m != nil {
		return m.Value
	}
	return nil
}

type ApplicationConfig struct {
	Entities             []string `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplicationConfig) Reset()         { *m = ApplicationConfig{} }
func (m *ApplicationConfig) String() string { return proto.CompactTextString(m) }
func (*ApplicationConfig) ProtoMessage()    {}
func (*ApplicationConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{8}
}

func (m *ApplicationConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplicationConfig.Unmarshal(m, b)
}
func (m *ApplicationConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplicationConfig.Marshal(b, m, deterministic)
}
func (m *ApplicationConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationConfig.Merge(m, src)
}
func (m *ApplicationConfig) XXX_Size() int {
	return xxx_messageInfo_ApplicationConfig.Size(m)
}
func (m *ApplicationConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationConfig.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationConfig proto.InternalMessageInfo

func (m *ApplicationConfig) GetEntities() []string {
	if m != nil {
		return m.Entities
	}
	return nil
}

type AssignerOrder struct {
	Tables               *AssignmentTables `protobuf:"bytes,1,opt,name=tables,proto3" json:"tables,omitempty"`
	Operation            string            `protobuf:"bytes,2,opt,name=operation,proto3" json:"operation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AssignerOrder) Reset()         { *m = AssignerOrder{} }
func (m *AssignerOrder) String() string { return proto.CompactTextString(m) }
func (*AssignerOrder) ProtoMessage()    {}
func (*AssignerOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{9}
}

func (m *AssignerOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignerOrder.Unmarshal(m, b)
}
func (m *AssignerOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignerOrder.Marshal(b, m, deterministic)
}
func (m *AssignerOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignerOrder.Merge(m, src)
}
func (m *AssignerOrder) XXX_Size() int {
	return xxx_messageInfo_AssignerOrder.Size(m)
}
func (m *AssignerOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignerOrder.DiscardUnknown(m)
}

var xxx_messageInfo_AssignerOrder proto.InternalMessageInfo

func (m *AssignerOrder) GetTables() *AssignmentTables {
	if m != nil {
		return m.Tables
	}
	return nil
}

func (m *AssignerOrder) GetOperation() string {
	if m != nil {
		return m.Operation
	}
	return ""
}

type AssignmentTables struct {
	Entries              map[string]*AssignmentTable `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Version              string                      `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *AssignmentTables) Reset()         { *m = AssignmentTables{} }
func (m *AssignmentTables) String() string { return proto.CompactTextString(m) }
func (*AssignmentTables) ProtoMessage()    {}
func (*AssignmentTables) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{10}
}

func (m *AssignmentTables) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignmentTables.Unmarshal(m, b)
}
func (m *AssignmentTables) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignmentTables.Marshal(b, m, deterministic)
}
func (m *AssignmentTables) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignmentTables.Merge(m, src)
}
func (m *AssignmentTables) XXX_Size() int {
	return xxx_messageInfo_AssignmentTables.Size(m)
}
func (m *AssignmentTables) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignmentTables.DiscardUnknown(m)
}

var xxx_messageInfo_AssignmentTables proto.InternalMessageInfo

func (m *AssignmentTables) GetEntries() map[string]*AssignmentTable {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *AssignmentTables) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type AssignmentTable struct {
	Hosts                map[uint64]string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	SortedSet            []uint64          `protobuf:"varint,2,rep,packed,name=sortedSet,proto3" json:"sortedSet,omitempty"`
	LoadMap              map[string]*Host  `protobuf:"bytes,3,rep,name=loadMap,proto3" json:"loadMap,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TotalLoad            int64             `protobuf:"varint,4,opt,name=totalLoad,proto3" json:"totalLoad,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AssignmentTable) Reset()         { *m = AssignmentTable{} }
func (m *AssignmentTable) String() string { return proto.CompactTextString(m) }
func (*AssignmentTable) ProtoMessage()    {}
func (*AssignmentTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{11}
}

func (m *AssignmentTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignmentTable.Unmarshal(m, b)
}
func (m *AssignmentTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignmentTable.Marshal(b, m, deterministic)
}
func (m *AssignmentTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignmentTable.Merge(m, src)
}
func (m *AssignmentTable) XXX_Size() int {
	return xxx_messageInfo_AssignmentTable.Size(m)
}
func (m *AssignmentTable) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignmentTable.DiscardUnknown(m)
}

var xxx_messageInfo_AssignmentTable proto.InternalMessageInfo

func (m *AssignmentTable) GetHosts() map[uint64]string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

func (m *AssignmentTable) GetSortedSet() []uint64 {
	if m != nil {
		return m.SortedSet
	}
	return nil
}

func (m *AssignmentTable) GetLoadMap() map[string]*Host {
	if m != nil {
		return m.LoadMap
	}
	return nil
}

func (m *AssignmentTable) GetTotalLoad() int64 {
	if m != nil {
		return m.TotalLoad
	}
	return 0
}

type Host struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Port                 int64    `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Load                 int64    `protobuf:"varint,3,opt,name=load,proto3" json:"load,omitempty"`
	Entities             []string `protobuf:"bytes,4,rep,name=entities,proto3" json:"entities,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Host) Reset()         { *m = Host{} }
func (m *Host) String() string { return proto.CompactTextString(m) }
func (*Host) ProtoMessage()    {}
func (*Host) Descriptor() ([]byte, []int) {
	return fileDescriptor_59885c909ad4dfd3, []int{12}
}

func (m *Host) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Host.Unmarshal(m, b)
}
func (m *Host) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Host.Marshal(b, m, deterministic)
}
func (m *Host) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Host.Merge(m, src)
}
func (m *Host) XXX_Size() int {
	return xxx_messageInfo_Host.Size(m)
}
func (m *Host) XXX_DiscardUnknown() {
	xxx_messageInfo_Host.DiscardUnknown(m)
}

var xxx_messageInfo_Host proto.InternalMessageInfo

func (m *Host) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Host) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Host) GetLoad() int64 {
	if m != nil {
		return m.Load
	}
	return 0
}

func (m *Host) GetEntities() []string {
	if m != nil {
		return m.Entities
	}
	return nil
}

func init() {
	proto.RegisterType((*InvokeEnvelope)(nil), "action.InvokeEnvelope")
	proto.RegisterType((*EventSource)(nil), "action.EventSource")
	proto.RegisterType((*SaveStateEnvelope)(nil), "action.SaveStateEnvelope")
	proto.RegisterType((*GetStateEnvelope)(nil), "action.GetStateEnvelope")
	proto.RegisterType((*EventSourceSpec)(nil), "action.EventSourceSpec")
	proto.RegisterType((*InvokeMethod)(nil), "action.InvokeMethod")
	proto.RegisterType((*State)(nil), "action.State")
	proto.RegisterType((*KeyVal)(nil), "action.KeyVal")
	proto.RegisterType((*ApplicationConfig)(nil), "action.ApplicationConfig")
	proto.RegisterType((*AssignerOrder)(nil), "action.AssignerOrder")
	proto.RegisterType((*AssignmentTables)(nil), "action.AssignmentTables")
	proto.RegisterMapType((map[string]*AssignmentTable)(nil), "action.AssignmentTables.EntriesEntry")
	proto.RegisterType((*AssignmentTable)(nil), "action.AssignmentTable")
	proto.RegisterMapType((map[uint64]string)(nil), "action.AssignmentTable.HostsEntry")
	proto.RegisterMapType((map[string]*Host)(nil), "action.AssignmentTable.LoadMapEntry")
	proto.RegisterType((*Host)(nil), "action.Host")
}

func init() { proto.RegisterFile("action.proto", fileDescriptor_59885c909ad4dfd3) }

var fileDescriptor_59885c909ad4dfd3 = []byte{
	// 792 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x6e, 0xc3, 0x34,
	0x18, 0x6d, 0x9a, 0xb4, 0x5b, 0xbe, 0x76, 0x7f, 0x66, 0x6c, 0x59, 0x00, 0x51, 0x59, 0x43, 0xaa,
	0x40, 0xeb, 0xa6, 0x22, 0xc1, 0x98, 0x80, 0xad, 0xa0, 0xb2, 0x4d, 0x63, 0x43, 0x4a, 0x81, 0x4b,
	0xaa, 0xac, 0x71, 0xbb, 0x68, 0xa9, 0x1d, 0x25, 0x6e, 0xb5, 0xbe, 0x01, 0x8f, 0xc4, 0x35, 0xb7,
	0xbc, 0x14, 0xb2, 0x9d, 0xa4, 0x49, 0xdb, 0x0c, 0xae, 0x62, 0x7f, 0x3e, 0x9f, 0xcf, 0xf1, 0x89,
	0x7d, 0xa0, 0xe9, 0x8e, 0xb8, 0xcf, 0x68, 0x27, 0x8c, 0x18, 0x67, 0xa8, 0xae, 0x66, 0xf6, 0xc9,
	0x84, 0xb1, 0x49, 0x40, 0xce, 0x65, 0xf5, 0x79, 0x36, 0x3e, 0x77, 0xe9, 0x42, 0x41, 0xec, 0x8f,
	0x56, 0x97, 0xc8, 0x34, 0xe4, 0xc9, 0x22, 0xbe, 0x82, 0xdd, 0x7b, 0x3a, 0x67, 0xaf, 0xa4, 0x4f,
	0xe7, 0x24, 0x60, 0x21, 0x41, 0x6d, 0x30, 0x3c, 0x97, 0xbb, 0x96, 0xd6, 0xd2, 0xda, 0x8d, 0xee,
	0x61, 0x47, 0x75, 0x77, 0xd2, 0xee, 0x4e, 0x8f, 0x2e, 0x1c, 0x89, 0xc0, 0x4f, 0xd0, 0xe8, 0xcf,
	0x09, 0xe5, 0x03, 0x36, 0x8b, 0x46, 0x04, 0x21, 0x30, 0xa8, 0x3b, 0x25, 0xb2, 0xd1, 0x74, 0xe4,
	0x18, 0x7d, 0x01, 0x46, 0x1c, 0x92, 0x91, 0x55, 0x95, 0x9b, 0x1d, 0x77, 0x12, 0xed, 0xb9, 0xb6,
	0x41, 0x48, 0x46, 0x8e, 0x04, 0xe1, 0x6f, 0xe0, 0x60, 0xe0, 0xce, 0xc9, 0x80, 0xbb, 0x7c, 0x29,
	0xe7, 0x14, 0x6a, 0xb1, 0x28, 0x58, 0x5a, 0x4b, 0x6f, 0x37, 0xba, 0xbb, 0xe9, 0x16, 0x0f, 0x64,
	0xf1, 0xbb, 0x1b, 0x38, 0x6a, 0x11, 0x9f, 0xc2, 0xfe, 0x2d, 0xe1, 0xc5, 0xce, 0x7d, 0xd0, 0x5f,
	0xc9, 0x22, 0x91, 0x23, 0x86, 0xd8, 0x83, 0xbd, 0x15, 0x66, 0x21, 0x9a, 0x2f, 0xc2, 0x4c, 0xb4,
	0x18, 0xa3, 0xef, 0x60, 0x6f, 0xc4, 0x28, 0x25, 0x92, 0x68, 0xe8, 0xd3, 0x31, 0x4b, 0xf4, 0x6f,
	0x36, 0x63, 0x77, 0x09, 0xbe, 0xa7, 0x63, 0x86, 0xdf, 0xa0, 0xa9, 0x2c, 0x7d, 0x24, 0xfc, 0x85,
	0x79, 0xe8, 0x53, 0x68, 0x4c, 0xe5, 0x68, 0x98, 0xb3, 0x07, 0x54, 0xe9, 0x49, 0x98, 0xf4, 0x09,
	0xc0, 0x88, 0x51, 0x4e, 0xde, 0xf8, 0xd0, 0xf7, 0x24, 0x95, 0xe9, 0x98, 0x49, 0xe5, 0xde, 0xcb,
	0x7e, 0x88, 0xfe, 0x9f, 0x3f, 0xe4, 0x0c, 0x6a, 0xd2, 0x82, 0xff, 0x69, 0xda, 0x4f, 0x50, 0x57,
	0x85, 0x75, 0xab, 0xd0, 0xe7, 0x50, 0x9b, 0xbb, 0xc1, 0x8c, 0xbc, 0x7b, 0x72, 0x05, 0xc1, 0xe7,
	0x70, 0xd0, 0x0b, 0xc3, 0xc0, 0x1f, 0xb9, 0x82, 0xe4, 0x47, 0x46, 0xc7, 0xfe, 0x04, 0xd9, 0xb0,
	0x4d, 0x28, 0xf7, 0xb9, 0x4f, 0x62, 0xa9, 0xc2, 0x74, 0xb2, 0x39, 0x1e, 0xc2, 0x4e, 0x2f, 0x8e,
	0xfd, 0x09, 0x25, 0xd1, 0x2f, 0x91, 0x47, 0x22, 0x74, 0x01, 0x75, 0xee, 0x3e, 0x07, 0x12, 0x2a,
	0xe8, 0xac, 0x54, 0xb0, 0x82, 0x4d, 0x09, 0xe5, 0xbf, 0xca, 0x75, 0x27, 0xc1, 0xa1, 0x8f, 0xc1,
	0x64, 0x21, 0x89, 0x24, 0x63, 0x6a, 0x59, 0x56, 0xc0, 0x7f, 0x6b, 0xb0, 0xbf, 0xda, 0x8a, 0xae,
	0x61, 0x8b, 0x50, 0x1e, 0xa5, 0x82, 0x1a, 0xdd, 0xcf, 0xca, 0x58, 0x3a, 0x7d, 0x85, 0x13, 0x9f,
	0x85, 0x93, 0x76, 0x21, 0x0b, 0xb6, 0xe6, 0x24, 0x8a, 0x97, 0x8c, 0xe9, 0xd4, 0x1e, 0x40, 0x33,
	0xdf, 0xb2, 0xc1, 0xcf, 0xb3, 0xa2, 0x9f, 0xc7, 0x25, 0xd4, 0x89, 0xa5, 0x57, 0xd5, 0x4b, 0x0d,
	0xff, 0x53, 0x85, 0xbd, 0x95, 0x65, 0x74, 0x09, 0xb5, 0x17, 0x16, 0xf3, 0xf4, 0x04, 0xb8, 0x64,
	0x9b, 0xce, 0x9d, 0x00, 0x29, 0xf9, 0xaa, 0x41, 0x18, 0x16, 0xb3, 0x88, 0x13, 0x6f, 0x40, 0xb8,
	0x55, 0x6d, 0xe9, 0x6d, 0xc3, 0x59, 0x16, 0xd0, 0xf7, 0xb0, 0x15, 0x30, 0xd7, 0x7b, 0x74, 0x43,
	0x4b, 0x97, 0x3b, 0x9f, 0x96, 0xed, 0xfc, 0xb3, 0x82, 0x25, 0xd6, 0x24, 0x4d, 0x62, 0x77, 0xce,
	0xb8, 0x1b, 0x88, 0x55, 0xcb, 0x68, 0x69, 0x6d, 0xdd, 0x59, 0x16, 0xec, 0x4b, 0x80, 0xa5, 0xa0,
	0xbc, 0x39, 0x86, 0x32, 0xe7, 0x30, 0x6f, 0x8e, 0x99, 0xf3, 0xc0, 0xbe, 0x83, 0x66, 0x9e, 0x70,
	0x83, 0xb1, 0xb8, 0x68, 0x6c, 0x33, 0xd5, 0x2d, 0x08, 0xf3, 0x6e, 0xfe, 0x01, 0x86, 0x28, 0x6d,
	0x4c, 0x29, 0x04, 0x46, 0xc8, 0x22, 0x2e, 0xb7, 0xd0, 0x1d, 0x39, 0x16, 0x35, 0x71, 0x38, 0xf9,
	0xea, 0x74, 0x47, 0x8e, 0x0b, 0x77, 0xda, 0x28, 0xde, 0xe9, 0xee, 0x9f, 0x55, 0xa8, 0xf7, 0x24,
	0x35, 0xba, 0x82, 0xba, 0x0a, 0x00, 0x74, 0x94, 0xaa, 0x29, 0x66, 0xac, 0x5d, 0x52, 0xc7, 0x15,
	0x74, 0x03, 0x66, 0x96, 0x81, 0xe8, 0x24, 0x85, 0xad, 0xc5, 0xa2, 0x7d, 0xb4, 0xf6, 0x20, 0xfb,
	0x22, 0xd5, 0x71, 0x05, 0x7d, 0x0b, 0xdb, 0x69, 0x14, 0xa2, 0xec, 0x1d, 0xad, 0x86, 0xa3, 0xbd,
	0xf1, 0x41, 0xe3, 0x0a, 0xfa, 0x01, 0x0e, 0x7e, 0x0b, 0x3d, 0x81, 0xcc, 0x25, 0xfb, 0x07, 0x1b,
	0x72, 0xbb, 0x5c, 0x41, 0xf7, 0x2f, 0x0d, 0xf4, 0x5e, 0x18, 0xa2, 0xaf, 0x32, 0x1f, 0x0e, 0x8b,
	0xe7, 0x55, 0xc1, 0x58, 0xaa, 0xe1, 0x6b, 0x68, 0x3a, 0x24, 0xe6, 0x2c, 0x4a, 0x6c, 0xd8, 0xc9,
	0x6c, 0x10, 0xd3, 0x77, 0x8e, 0x7e, 0x03, 0xe6, 0x2d, 0xe1, 0x49, 0x00, 0x95, 0xc0, 0xec, 0xcc,
	0xd4, 0xb5, 0xcc, 0xc2, 0x95, 0xee, 0x03, 0x6c, 0xa7, 0xc9, 0x84, 0xae, 0x01, 0x39, 0x44, 0xdc,
	0x05, 0xf5, 0x5b, 0x05, 0xf9, 0x2c, 0x46, 0x85, 0x0b, 0x66, 0x7f, 0x58, 0x7c, 0x26, 0x49, 0x9e,
	0xe1, 0x4a, 0x5b, 0xbb, 0xd0, 0x9e, 0xeb, 0x92, 0xf9, 0xcb, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xb6, 0x64, 0xbc, 0x9c, 0xb2, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ActionClient is the client API for Action service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ActionClient interface {
	Invoke(ctx context.Context, in *InvokeEnvelope, opts ...grpc.CallOption) (*InvokeEnvelope, error)
	SaveState(ctx context.Context, in *SaveStateEnvelope, opts ...grpc.CallOption) (*empty.Empty, error)
	GetState(ctx context.Context, in *GetStateEnvelope, opts ...grpc.CallOption) (*any.Any, error)
	UpdateEventSource(ctx context.Context, in *EventSource, opts ...grpc.CallOption) (*empty.Empty, error)
}

type actionClient struct {
	cc *grpc.ClientConn
}

func NewActionClient(cc *grpc.ClientConn) ActionClient {
	return &actionClient{cc}
}

func (c *actionClient) Invoke(ctx context.Context, in *InvokeEnvelope, opts ...grpc.CallOption) (*InvokeEnvelope, error) {
	out := new(InvokeEnvelope)
	err := c.cc.Invoke(ctx, "/action.Action/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionClient) SaveState(ctx context.Context, in *SaveStateEnvelope, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/action.Action/SaveState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionClient) GetState(ctx context.Context, in *GetStateEnvelope, opts ...grpc.CallOption) (*any.Any, error) {
	out := new(any.Any)
	err := c.cc.Invoke(ctx, "/action.Action/GetState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *actionClient) UpdateEventSource(ctx context.Context, in *EventSource, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/action.Action/UpdateEventSource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ActionServer is the server API for Action service.
type ActionServer interface {
	Invoke(context.Context, *InvokeEnvelope) (*InvokeEnvelope, error)
	SaveState(context.Context, *SaveStateEnvelope) (*empty.Empty, error)
	GetState(context.Context, *GetStateEnvelope) (*any.Any, error)
	UpdateEventSource(context.Context, *EventSource) (*empty.Empty, error)
}

func RegisterActionServer(s *grpc.Server, srv ActionServer) {
	s.RegisterService(&_Action_serviceDesc, srv)
}

func _Action_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/action.Action/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionServer).Invoke(ctx, req.(*InvokeEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _Action_SaveState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveStateEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionServer).SaveState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/action.Action/SaveState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionServer).SaveState(ctx, req.(*SaveStateEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _Action_GetState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStateEnvelope)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionServer).GetState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/action.Action/GetState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionServer).GetState(ctx, req.(*GetStateEnvelope))
	}
	return interceptor(ctx, in, info, handler)
}

func _Action_UpdateEventSource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventSource)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ActionServer).UpdateEventSource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/action.Action/UpdateEventSource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ActionServer).UpdateEventSource(ctx, req.(*EventSource))
	}
	return interceptor(ctx, in, info, handler)
}

var _Action_serviceDesc = grpc.ServiceDesc{
	ServiceName: "action.Action",
	HandlerType: (*ActionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _Action_Invoke_Handler,
		},
		{
			MethodName: "SaveState",
			Handler:    _Action_SaveState_Handler,
		},
		{
			MethodName: "GetState",
			Handler:    _Action_GetState_Handler,
		},
		{
			MethodName: "UpdateEventSource",
			Handler:    _Action_UpdateEventSource_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "action.proto",
}

// AppClient is the client API for App service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AppClient interface {
	Invoke(ctx context.Context, in *InvokeMethod, opts ...grpc.CallOption) (*any.Any, error)
	RestoreState(ctx context.Context, in *State, opts ...grpc.CallOption) (*empty.Empty, error)
	GetConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ApplicationConfig, error)
}

type appClient struct {
	cc *grpc.ClientConn
}

func NewAppClient(cc *grpc.ClientConn) AppClient {
	return &appClient{cc}
}

func (c *appClient) Invoke(ctx context.Context, in *InvokeMethod, opts ...grpc.CallOption) (*any.Any, error) {
	out := new(any.Any)
	err := c.cc.Invoke(ctx, "/action.App/Invoke", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) RestoreState(ctx context.Context, in *State, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/action.App/RestoreState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *appClient) GetConfig(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ApplicationConfig, error) {
	out := new(ApplicationConfig)
	err := c.cc.Invoke(ctx, "/action.App/GetConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AppServer is the server API for App service.
type AppServer interface {
	Invoke(context.Context, *InvokeMethod) (*any.Any, error)
	RestoreState(context.Context, *State) (*empty.Empty, error)
	GetConfig(context.Context, *empty.Empty) (*ApplicationConfig, error)
}

func RegisterAppServer(s *grpc.Server, srv AppServer) {
	s.RegisterService(&_App_serviceDesc, srv)
}

func _App_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeMethod)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/action.App/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).Invoke(ctx, req.(*InvokeMethod))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_RestoreState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(State)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).RestoreState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/action.App/RestoreState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).RestoreState(ctx, req.(*State))
	}
	return interceptor(ctx, in, info, handler)
}

func _App_GetConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppServer).GetConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/action.App/GetConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppServer).GetConfig(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _App_serviceDesc = grpc.ServiceDesc{
	ServiceName: "action.App",
	HandlerType: (*AppServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _App_Invoke_Handler,
		},
		{
			MethodName: "RestoreState",
			Handler:    _App_RestoreState_Handler,
		},
		{
			MethodName: "GetConfig",
			Handler:    _App_GetConfig_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "action.proto",
}

// AssignerClient is the client API for Assigner service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AssignerClient interface {
	ReportActionStatus(ctx context.Context, opts ...grpc.CallOption) (Assigner_ReportActionStatusClient, error)
}

type assignerClient struct {
	cc *grpc.ClientConn
}

func NewAssignerClient(cc *grpc.ClientConn) AssignerClient {
	return &assignerClient{cc}
}

func (c *assignerClient) ReportActionStatus(ctx context.Context, opts ...grpc.CallOption) (Assigner_ReportActionStatusClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Assigner_serviceDesc.Streams[0], "/action.Assigner/ReportActionStatus", opts...)
	if err != nil {
		return nil, err
	}
	x := &assignerReportActionStatusClient{stream}
	return x, nil
}

type Assigner_ReportActionStatusClient interface {
	Send(*Host) error
	Recv() (*AssignerOrder, error)
	grpc.ClientStream
}

type assignerReportActionStatusClient struct {
	grpc.ClientStream
}

func (x *assignerReportActionStatusClient) Send(m *Host) error {
	return x.ClientStream.SendMsg(m)
}

func (x *assignerReportActionStatusClient) Recv() (*AssignerOrder, error) {
	m := new(AssignerOrder)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AssignerServer is the server API for Assigner service.
type AssignerServer interface {
	ReportActionStatus(Assigner_ReportActionStatusServer) error
}

func RegisterAssignerServer(s *grpc.Server, srv AssignerServer) {
	s.RegisterService(&_Assigner_serviceDesc, srv)
}

func _Assigner_ReportActionStatus_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AssignerServer).ReportActionStatus(&assignerReportActionStatusServer{stream})
}

type Assigner_ReportActionStatusServer interface {
	Send(*AssignerOrder) error
	Recv() (*Host, error)
	grpc.ServerStream
}

type assignerReportActionStatusServer struct {
	grpc.ServerStream
}

func (x *assignerReportActionStatusServer) Send(m *AssignerOrder) error {
	return x.ServerStream.SendMsg(m)
}

func (x *assignerReportActionStatusServer) Recv() (*Host, error) {
	m := new(Host)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Assigner_serviceDesc = grpc.ServiceDesc{
	ServiceName: "action.Assigner",
	HandlerType: (*AssignerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReportActionStatus",
			Handler:       _Assigner_ReportActionStatus_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "action.proto",
}
